import 'package:adobe_xd/page_link.dart';
import 'package:adobe_xd/pinned.dart';
import 'package:flutter/material.dart';
import 'package:flutter_svg/svg.dart';
import 'package:todo/main_menu.dart';
import 'package:todo/speech_tts.dart';

import 'back_button.dart';

class NeedMenu extends StatelessWidget {
  const NeedMenu({
    Key? key,
  }) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xfff7f7fa),
      body: Stack(
        children: <Widget>[
          Pinned.fromPins(
            Pin(size: 500.0, middle: 0.290),
            Pin(size: 580.0, middle: 0.5),
            child: Stack(
              children: <Widget>[
                Container(
                    decoration: BoxDecoration(
                      color: const Color(0xffffffff),
                      borderRadius: BorderRadius.circular(28.0),
                      boxShadow: const [
                        BoxShadow(
                          color: Color(0x29000000),
                          offset: Offset(0, 4),
                          blurRadius: 7,
                        ),
                      ],
                    ),
                    child: GestureDetector(
                      onTap: () {
                        TextToSpeech.speak('I need the toilet.');
                      },
                    )),
                Pinned.fromPins(
                  Pin(start: 80.0, end: 43.0),
                  Pin(size: 92.0, end: 20.0),
                  child: const Text(
                    'The Toilet',
                    style: TextStyle(
                      fontFamily: 'Roboto Mono',
                      fontSize: 70,
                      color: Color(0xff32325d),
                    ),
                    softWrap: false,
                  ),
                ),
                Pinned.fromPins(
                  Pin(size: 270.0, middle: 0.5),
                  Pin(size: 315.0, start: 80.0),
                  child: GestureDetector(
                    onTap: () {
                      TextToSpeech.speak('I need the toilet.');
                    },
                    child: SvgPicture.string(
                      _svg_vwplbo,
                      allowDrawingOutsideViewBox: true,
                      fit: BoxFit.fill,
                    ),
                  ),
                )
              ],
            ),
          ),
          Pinned.fromPins(
            Pin(size: 500.0, end: 30.0),
            Pin(size: 580.0, middle: 0.5),
            child: Stack(
              children: <Widget>[
                Stack(
                  children: <Widget>[
                    Container(
                        decoration: BoxDecoration(
                          color: const Color(0xffffffff),
                          borderRadius: BorderRadius.circular(28.0),
                          boxShadow: const [
                            BoxShadow(
                              color: Color(0x29000000),
                              offset: Offset(0, 4),
                              blurRadius: 7,
                            ),
                          ],
                        ),
                        child: GestureDetector(
                          onTap: () {
                            TextToSpeech.speak('I need a nurse.');
                          },
                        )),
                    Pinned.fromPins(
                      Pin(size: 300, middle: 0.63),
                      Pin(size: 81.0, end: 20),
                      child: const Text(
                        'A Nurse',
                        style: TextStyle(
                          fontFamily: 'Roboto Mono',
                          fontSize: 61,
                          color: Color(0xff32325d),
                        ),
                        softWrap: false,
                      ),
                    ),
                  ],
                ),
                Pinned.fromPins(Pin(size: 247.5, middle: 0.4992),
                    Pin(size: 330.0, start: 71.0),
                    child: GestureDetector(
                      onTap: () {
                        TextToSpeech.speak('I need a nurse.');
                      },
                      child:
                          // Adobe XD layer: 'restaurant_FILL0_wgâ€¦' (shape)
                          SvgPicture.string(
                        _svg_ete94n,
                        allowDrawingOutsideViewBox: true,
                        fit: BoxFit.fill,
                      ),
                    )),
              ],
            ),
          ),
          Pinned.fromPins(
            Pin(size: 180.0, start: 15.7),
            Pin(size: 246.5, middle: 0.22),
            child:
                // Adobe XD layer: 'Back Button' (component)
                PageLink(
              links: [
                PageLinkInfo(
                  ease: Curves.easeInOutExpo,
                  duration: 0.3,
                  pageBuilder: () => const MainMenu(),
                ),
              ],
              child: XDBackButton(),
            ),
          ),
        ],
      ),
    );
  }
}

const String _svg_vwplbo =
    '<svg viewBox="463.7 366.5 241.5 322.0" ><path transform="translate(463.74, 366.54)" d="M 231.4597473144531 30.19040489196777 C 236.9946594238281 30.19040489196777 241.5232391357422 25.66184043884277 241.5232391357422 20.12693405151367 L 241.5232391357422 10.06346702575684 C 241.5232391357422 4.528560638427734 236.9946594238281 0 231.4597473144531 0 L 10.06346702575684 0 C 4.528560638427734 0 0 4.528560638427734 0 10.06346702575684 L 0 20.12693405151367 C 0 25.66184043884277 4.528560638427734 30.19040489196777 10.06346702575684 30.19040489196777 L 20.12693405151367 30.19040489196777 L 20.12693405151367 128.7494812011719 C 7.421807289123535 135.1020355224609 0 142.7125549316406 0 150.9520111083984 C 0 193.2185821533203 21.76225090026855 230.3276214599609 54.59431457519531 251.9011840820312 L 41.13442230224609 296.0546264648438 C 37.17193603515625 308.9484558105469 46.85801696777344 322.0309448242188 60.38080978393555 322.0309448242188 L 181.1424102783203 322.0309448242188 C 194.6652069091797 322.0309448242188 204.3512878417969 308.9484558105469 200.3887786865234 296.0546264648438 L 186.9288940429688 251.9011840820312 C 219.7609710693359 230.3276214599609 241.5232391357422 193.2185821533203 241.5232391357422 150.9520111083984 C 241.5232391357422 142.7125549316406 234.1014404296875 135.1020355224609 221.3962707519531 128.7494812011719 L 221.3962707519531 30.19040489196777 L 231.4597473144531 30.19040489196777 Z M 50.31734466552734 45.28560256958008 C 50.31734466552734 42.51815414428711 52.58162307739258 40.25386810302734 55.34906768798828 40.25386810302734 L 85.53948211669922 40.25386810302734 C 88.30693054199219 40.25386810302734 90.57120513916016 42.51815414428711 90.57120513916016 45.28560256958008 L 90.57120513916016 55.34906768798828 C 90.57120513916016 58.11652374267578 88.30693054199219 60.38080978393555 85.53948211669922 60.38080978393555 L 55.34906768798828 60.38080978393555 C 52.58162307739258 60.38080978393555 50.31734466552734 58.11652374267578 50.31734466552734 55.34906768798828 L 50.31734466552734 45.28560256958008 Z M 120.7616195678711 171.0789642333984 C 72.26827239990234 171.0789642333984 32.95785522460938 162.084716796875 32.95785522460938 150.9520111083984 C 32.95785522460938 139.8192901611328 72.26827239990234 130.8250885009766 120.7616195678711 130.8250885009766 C 169.2549285888672 130.8250885009766 208.5653686523438 139.8192901611328 208.5653686523438 150.9520111083984 C 208.5653686523438 162.084716796875 169.2549285888672 171.0789642333984 120.761604309082 171.0789642333984 Z" fill="#d84f99" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /></svg>';
const String _svg_ete94n =
    '<svg viewBox="1270.0 366.5 281.8 322.0" ><path transform="translate(1270.0, 366.54)" d="M 36.34168243408203 181.1423492431641 L 88.14336395263672 181.1423492431641 C 102.3013916015625 193.5204162597656 120.6106109619141 201.269287109375 140.8884887695312 201.269287109375 C 161.1663818359375 201.269287109375 179.4755706787109 193.5204162597656 193.6336212158203 181.1423492431641 L 245.4352874755859 181.1423492431641 C 248.924072265625 181.1383056640625 252.1618499755859 179.3276062011719 253.9917449951172 176.3572387695312 C 255.8216400146484 173.3868713378906 255.9825134277344 169.6806640625 254.4169158935547 166.5628814697266 C 244.8377685546875 147.7882537841797 234.7428741455078 127.4222946166992 227.9059906005859 106.471435546875 C 223.1447296142578 91.88570404052734 221.3961944580078 76.47603607177734 221.3961944580078 61.13554000854492 L 221.3961944580078 30.19039154052734 L 140.8884887695312 0 L 60.38078308105469 30.19039154052734 L 60.38078308105469 61.13554000854492 C 60.38078308105469 76.47602844238281 58.651123046875 91.88570404052734 53.88356018066406 106.4714508056641 C 47.03411483764648 127.4223251342773 36.93920135498047 147.8071136474609 27.36004257202148 166.5628814697266 C 25.79444313049316 169.6806640625 25.95533752441406 173.3868713378906 27.78522682189941 176.3572387695312 C 29.61511611938477 179.3276062011719 32.8529052734375 181.1383056640625 36.34168243408203 181.1423492431641 Z M 115.7298355102539 45.07802963256836 C 115.7298355102539 43.34118270874023 117.1378173828125 41.93319702148438 118.8746566772461 41.93319702148438 L 132.5043640136719 41.93319702148438 L 132.5043640136719 28.30349159240723 C 132.5043640136719 26.56664657592773 133.9123687744141 25.15866088867188 135.6492004394531 25.15866088867188 L 146.1277770996094 25.15866088867188 C 147.8646087646484 25.15866088867188 149.2725982666016 26.56664657592773 149.2725982666016 28.30349159240723 L 149.2725982666016 41.93319702148438 L 162.9023284912109 41.93319702148438 C 164.6391754150391 41.93319702148438 166.0471649169922 43.34119033813477 166.0471649169922 45.07802963256836 L 166.0471496582031 55.55661010742188 C 166.0471649169922 57.29345321655273 164.6391754150391 58.70143890380859 162.9023284912109 58.70143890380859 L 149.2725982666016 58.70143890380859 L 149.2725982666016 72.33114624023438 C 149.2725982666016 74.06798553466797 147.8646087646484 75.47597503662109 146.1277770996094 75.47597503662109 L 135.6492004394531 75.47597503662109 C 133.9123687744141 75.47597503662109 132.5043640136719 74.06798553466797 132.5043640136719 72.33114624023438 L 132.5043640136719 58.70143890380859 L 118.8746566772461 58.70143890380859 C 117.1378173828125 58.70143890380859 115.7298355102539 57.29344940185547 115.7298355102539 55.55661010742188 L 115.7298355102539 45.07802963256836 Z M 90.57117462158203 100.6346435546875 L 191.205810546875 100.6346435546875 L 191.205810546875 120.7615661621094 C 191.205810546875 148.5510711669922 168.677978515625 171.0788879394531 140.8885040283203 171.0788879394531 C 113.0990142822266 171.0788879394531 90.57118988037109 148.5510559082031 90.57118988037109 120.7615661621094 L 90.57117462158203 100.6346435546875 Z M 200.8981628417969 201.269287109375 L 140.8884887695312 261.2663879394531 L 80.87879943847656 201.269287109375 C 35.91398620605469 203.2190704345703 0 240.0135955810547 0 285.418701171875 C 0 305.6389770507812 16.39181518554688 322.0308532714844 36.61213684082031 322.0308532714844 L 245.1648254394531 322.0308532714844 C 265.3851623535156 322.0308532714844 281.7769775390625 305.6389770507812 281.7769775390625 285.4186706542969 C 281.7769775390625 240.0135955810547 245.8629913330078 203.2190704345703 200.8981628417969 201.269287109375 Z" fill="#d84f99" stroke="none" stroke-width="1" stroke-miterlimit="4" stroke-linecap="butt" /></svg>';
